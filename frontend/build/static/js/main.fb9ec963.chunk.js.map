{"version":3,"sources":["components/navbar.js","components/rectangle.js","utils/gendata.js","utils/updatearray.js","components/graph.js","components/main.js","App.js","index.js"],"names":["Navigation","useState","isOpen","setIsOpen","Navbar","className","color","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","Rectangle","callBack","rectDimension","column","separator","row","colorToggle","fill","x","y","height","width","stroke","strokeWidth","genData","c","r","returnArray","i","rowArray","j","push","sumFunction","compareArr","data","columns","rows","sumResult","console","log","updateArray","returnData","reduce","acc","elem","sum","SvgDiv","styled","div","ParentDiv","display","flexDirection","alignItems","ButtonDiv","justifyContent","marginTop","Button","button","marginRight","border","borderRadius","Graph","setData","interval","useRef","handleClick","tempArray","viewBox","map","rowIndex","colIndex","current","clearInterval","setInterval","Main","App","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fb9ec963.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\";\n\nexport default function Navigation() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const toggle = () => setIsOpen(!isOpen);\n\n  return (\n      <Navbar className=\"mb-3\" color=\"light\" light expand=\"md\">\n        <NavbarBrand href=\"/\">Game of Life</NavbarBrand>\n          <NavbarToggler onClick={toggle} />\n          <Collapse isOpen={isOpen} navbar>\n            <Nav>\n              <NavItem>\n                <NavLink href=\"https://github.com/andrewlubrino/game-of-life\">GitHub</NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n      </Navbar>\n  );\n}","import React, { useState, useEffect } from \"react\";\nimport styled from '@emotion/styled'\n\nexport default function Rectangle({ callBack, rectDimension, separator, column, row, colorToggle }) {\n  \n    const trigger =() => {\n      callBack([row, column]);\n    }\n  \n    return (\n      <rect\n        onClick={trigger}\n        fill={colorToggle ? \"black\" : \"white\"}\n        x={(rectDimension) * column}\n        y={(rectDimension) * row}\n        height={rectDimension}\n        width={rectDimension}\n        stroke=\"black\"\n        strokeWidth={rectDimension/10}\n      />\n    );\n  }","function genData(c, r) {\n    const returnArray = [];\n\n    for (let i = 0; i < r; i++) {\n        const rowArray = [];\n        for (let j = 0; j < c; j++) {\n        rowArray.push(false);\n        }\n        returnArray.push(rowArray);\n    }\n\n    return returnArray;\n}\n\nexport { genData }\n","function sumFunction(compareArr, data, columns, rows){\n\n    let sumResult = 0;\n\n    for(let i = 0; i < 3; i++){\n        if(compareArr[0][i] >= 0 &&  compareArr[0][i] < rows){\n\n            for(let j = 0; j < 3; j++){\n\n                if(compareArr[1][j] >= 0 && compareArr[1][j] < columns){\n\n                    sumResult += data[compareArr[0][i]][compareArr[1][j]]\n\n                }\n            }\n        }\n    }\n\n    sumResult -= data[compareArr[0][1]][compareArr[1][1]];\n    console.log(sumResult)\n\n    return sumResult;\n}\n  \nfunction updateArray(data, columns, rows){\n    let returnData = data.reduce((acc, elem) => {\n        acc.push([...elem])\n        return acc;\n        }, []);\n    for(let i = 0; i < rows; i++){\n        for(let j = 0; j < columns; j++){\n            const compareArr = [[i-1, i, i+1], [j-1, j, j+1]];\n            const sum = sumFunction(compareArr, data, columns, rows);\n            if(data[i][j]){\n                if(sum !== 2 && sum !== 3){\n                    returnData[i][j] = !returnData[i][j];\n                }\n            }\n            else{\n                if(sum === 3){\n                    returnData[i][j] = !returnData[i][j];\n                }\n            }\n        }\n    }\n    return returnData;\n}\n\nexport { updateArray }","import React, { useState, useRef} from \"react\";\nimport Rectangle from \"./rectangle.js\";\nimport { genData } from \"../utils/gendata.js\";\nimport { updateArray } from \"../utils/updatearray.js\";\n\nimport styled from '@emotion/styled';\n\nconst SvgDiv = styled.div({\n  height: \"50%\", \n  width: \"80%\"\n})\n\nconst ParentDiv = styled.div({\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\"\n})\n\nconst ButtonDiv = styled.div({\n  width: \"80%\",\n  display: \"flex\",\n  flexDirection: \"row\",\n  justifyContent: \"flex-start\",\n  marginTop: \"1rem\"\n})\n\nconst Button = styled.button({\n  marginRight: \"1rem\",\n  border: \"none\",\n  borderRadius: \"0.5rem\",\n  height: \"2.25rem\"\n})\n\nexport default function Graph() {\n\n  const columns = 100;\n  const rows = 16;\n\n  const rectDimension = 1;\n  const separator = rectDimension / 10; \n\n  const [data, setData] = useState(genData(columns, rows));\n  const interval = useRef(null);\n\n  function handleClick (returnArray) {\n    const tempArray = data;\n    tempArray[returnArray[0]][returnArray[1]] = !(data[returnArray[0]][returnArray[1]]);\n    setData([...tempArray]);\n  }\n\n  const toggleSimulation = () => {\n    if(!interval.current){\n      interval.current = setInterval(() => setData(data => updateArray(data, columns, rows)), 1000);\n    }\n    else{\n      clearInterval(interval.current);\n      interval.current = null;\n    }\n  }\n\n  return (\n    <ParentDiv>\n      <SvgDiv>\n        <svg viewBox={`0 0 ${columns*(rectDimension)} ${rows*(rectDimension)}`}>\n          {data.map((row, rowIndex) => {\n            return row.map((column, colIndex) => {\n              return (\n                <Rectangle\n                  key={`${row}.${column}`}\n                  callBack={handleClick}\n                  rectDimension={rectDimension}\n                  separator={separator}\n                  column={colIndex}\n                  row={rowIndex}\n                  colorToggle={column}\n                />\n              );\n            });\n          })}\n        </svg>\n      </SvgDiv>\n      <ButtonDiv>\n        <Button onClick={() => setData(updateArray(data, columns, rows))}>One Step</Button>\n        <Button onClick={toggleSimulation}>Toggle Simulation</Button>\n        <Button onClick={() => setData(genData(columns, rows))}>Reset</Button>\n      </ButtonDiv>\n    </ParentDiv>\n  );\n}","import React, { useState, useEffect } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Navigation from \"./navbar.js\"\nimport Graph from \"./graph.js\"\n\nexport default function Main(){\n    return(\n        <div>\n            <Navigation />\n            <Graph />\n        </div>\n    )\n}","import React from \"react\";\nimport Main from \"./components/main.js\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\n\nexport default function App(){\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\">\n          <Main />\n        </Route>\n      </Switch>\n    </Router>\n    \n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}